---
- name: deploy laravel app 
  hosts: all
  remote_user: root
  
  pre_tasks:
    - name: Update & Upgrade packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: true

  vars:
    php8_and_modules: php8.1, libapache2-mod-php8.1, php8.1-cli, php8.1-common, php8.1-mysql, php8.1-xml, php8.1-xmlrpc, php8.1-curl, php8.1-gd, php8.1-imagick, php8.1-cli, php8.1-dev, php8.1-imap, php8.1-mbstring, php8.1-opcache, php8.1-soap, php8.1-zip, php8.1-intl, php8.1-bcmath
    mysql_root_password: root

  tasks: 
    - name: change-timezone
      shell: timedatectl set-timezone Africa/Lagos

    - name: install-apache2 
      apt:
        name:
          - apache2
          - apache2-utils
          - elinks
    - name: Other Installation
      apt:
        name:
          - lsb-release
          - ca-certificates
          - apt-transport-https
          - software-properties-common
          - gnupg2
          - curl
          - wget
    - name: Update Sury source list
      shell: wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
    - name: Import Sury GPG Key
      shell: echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php.list
    - name: update-package
      shell: apt update -y
    - name: upgrade-apt
      shell: apt upgrade -y
    - name: Install PHP 8 and modules
      apt:
        name: '{{ php8_and_modules }}'
    - name: Add Essentials
      apt:
        name:
          - debconf-utils
          - libaio1
    - name: Disable MySQL setup 
      shell:
        debconf-set-selections <<EOF
        mysql-apt-config mysql-apt-config/select-server select mysql-8.0
        mysql-community-server mysql-community-server/root-pass password {{ mysql_root_password }}
        mysql-community-server mysql-community-server/re-root-pass password {{ mysql_root_password }}
        EOF
    - name: Disable MySQL setup 
      shell:
        wget --user-agent="Mozilla" -O /tmp/mysql-apt-config_0.8.24-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.24-1_all.deb
    - name: Configure MySQL Package
      shell:
        sudo DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.24-1_all.deb < /dev/null > /dev/null
    - name: update-package
      shell: apt update -y
    - name: upgrade-apt
      shell: apt upgrade -y
    - name: install-git
      apt:
        name:
          - git
    - name: Install Composer 1st step
      shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - name: Install Composer 2nd step
      shell: php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - name: Install Composer 3rd step
      shell: php composer-setup.php
    - name: Install Composer 4th step
      shell: php -r "unlink('composer-setup.php');"
    - name: Move Composer to Global
      shell: mv composer.phar /usr/local/bin/composer
    - name: Copy PGSQL script
      copy:
        src: /root/pgsql.sh
        dest: /root/pgsql.sh
        owner: root
        group: root
        mode: '0775'
    - name: Execute PGSQL script
      script: /root/pgsql.sh
    - name: cloning-git-repo
      shell: git clone https://github.com/f1amy/laravel-realworld-example-app.git laravel
    - name: move
      shell: mv laravel /var/www/temitayoolatunji
    - name: Create .env file
      copy:
        dest: /var/www/temitayoolatunji/.env
        content: |
          APP_NAME="Laravel Real World Example App"
          APP_ENV=local
          APP_KEY=
          APP_DEBUG=true
          APP_URL=https://laravel.temitayoolatunji
          APP_PORT=3000
          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug
          DB_CONNECTION=mysql
          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=temitayoolatunji
          DB_USERNAME=temitayoolatunji
          DB_PASSWORD=temitayoolatunji
          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          MEMCACHED_HOST=127.0.0.1
          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379
          MAIL_MAILER=smtp
          MAIL_HOST=mailhog
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="hello@example.com"
          MAIL_FROM_NAME="${APP_NAME}"
          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false
          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_APP_CLUSTER=mt1
          MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
          MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
          L5_SWAGGER_GENERATE_ALWAYS=true
          SAIL_XDEBUG_MODE=develop,debug
          SAIL_SKIP_CHECKS=true
        mode: '0755'
    - name: Install MySQL
      shell:
       sudo DEBIAN_FRONTEND=noninteractive apt-get install mysql-server mysql-client --assume-yes --force-yes < /dev/null > /dev/null
    - name: Create mysql database
      command: 'mysql -ne "{{ item }}"'
      with_items:
      - CREATE DATABASE temitayoolatunji;
    - name: Create mysql user
      command: 'mysql -ne "{{ item }}"'
      with_items:
      - CREATE USER 'temitayoolatunji'@'localhost' IDENTIFIED BY 'temitayoolatunji';
    - name: Grant mysql user privileges
      command: 'mysql -ne "{{ item }}"'
      with_items:
      - GRANT ALL PRIVILEGES ON temitayoolatunji.* TO 'temitayoolatunji'@'localhost';
    - name: Reload privilege tables
      command: 'mysql -ne "{{ item }}"'
      with_items:
      - FLUSH PRIVILEGES;
    - name: Add frontend route
      blockinfile:
        path: /var/www/temitayoolatunji/routes/web.php
        marker: ""
        block: |
          Route::get('/', function () {
            return view('welcome');
          });
    - name: navigate-to-my-webserver
      shell: cd /var/www/temitayoolatunji
    - name: 
      shell: cd ~
    - name: Set owner and permissions
      shell: chown -R www-data:www-data /var/www/temitayoolatunji && chmod -R 755 /var/www/temitayoolatunji
    - name: change-group-name
      shell: chgrp -R www-data /var/www/temitayoolatunji/storage /var/www/temitayoolatunji/bootstrap/cache
    - name: change-access-permission
      shell: chmod -R ug+rwx /var/www/temitayoolatunji/storage /var/www/temitayoolatunji/bootstrap/cache
    - name: 
      shell: cd /var/www/temitayoolatunji
    - name: Composer Create Project
      shell:
        cd /var/www/temitayoolatunji && composer create-project --no-interaction
    - name:  php artisan migration
      shell: cd /var/www/temitayoolatunji && sudo php artisan migrate --seed
    - name:  Create .htaccess
      copy:
        dest: "/var/www/temitayoolatunji/.htaccess"
        content: |
          <IfModule mod_rewrite.c>
          RewriteEngine On
          RewriteCond %{HTTP:Authorization} .
          RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteRule ^ index.php [L]
          </IfModule>
    - name: Create virtual host config
      copy:
        dest: "/etc/apache2/sites-available/temitayoolatunji.conf"
        content: |
          <VirtualHost *:80>
            ServerAdmin admin@temitayoolatunji.me
            ServerName server.temitayoolatunji.me
            ServerAlias www.temitayoolatunji.me
            DocumentRoot /var/www/temitayoolatunji/public/
            <Directory /var/www/temitayoolatunji>
              Options Indexes FollowSymLinks
              AllowOverride All
              Require all granted
            </Directory>
           ErrorLog ${APACHE_LOG_DIR}/error.log
           CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>
    - name: Disable default host
      shell: a2dissite 000-default.conf
    - name: Enable virtual host
      shell: a2ensite temitayoolatunji.conf
    - name: Enable Apache Modules
      shell: a2enmod {{ item }}
      with_items:
        - rewrite
    - name: restart-apache2
      service:
        name: apache2
        state: restarted
    - name: install snapd
      apt:
        name: snapd
    - name: Installing core
      shell: snap install core
    - name: refresh core
      shell: snap refresh core
    - name: instal certbot
      shell: snap install --classic certbot
    - name: create symlink
      shell: ln -s /snap/bin/certbot /usr/bin/certbot
    - name: install ssl
      shell: yes | certbot --apache --agree-tos --redirect -m email@yourdomain.com -d temitayoolatunji.me